/*!
 * @license Creatine
 *
 * Copyright (c) 2014 Renato de Pontes Pereira.
 *
 * Distributed under the terms of the MIT license.
 * http://www.opensource.org/licenses/mit-license.html
 *
 * This notice shall be included in all copies or substantial portions of the Software.
 */
var tweenOnChange = function() {
    if(Renderer) Renderer.update = true;
}
this.creatine = this.creatine || {},
    function() {
        "use strict";
        creatine.version = "0.1", creatine.buildDate = "Tue, 15 Jul 2014 13:26:15 GMT", creatine.LEFT = 1, creatine.RIGHT = 2, creatine.TOP = 3, creatine.BOTTOM = 4, creatine.TOP_LEFT = 5, creatine.TOP_RIGHT = 6, creatine.CENTER = 7, creatine.BOTTOM_LEFT = 8, creatine.BOTTOM_RIGHT = 9, creatine.HORIZONTAL = 10, creatine.VERTICAL = 11, creatine.LEFT_TO_RIGHT = 12, creatine.RIGHT_TO_LEFT = 13, creatine.TOP_TO_BOTTOM = 14, creatine.BOTTOM_TO_TOP = 15, creatine.STRETCH = 16, creatine.FIT = 17, creatine.FILL = 18, creatine.NOSCALE = 19
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        creatine.merge = function() {
            for (var a, b, c, d = arguments[0] || {}, e = 1, f = arguments.length; f > e; e++)
                if (null != (a = arguments[e]))
                    for (b in a) c = a[b], d !== c && void 0 !== c && (d[b] = c);
            return d
        }, creatine.clip = function(a, b, c) {
            return Math.max(Math.min(a, c), b)
        }
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a) {
                this.initialize(a)
            },
            b = a.prototype;
        b.stage = null, b.scene = null, b.nextScene = null, b.sceneStack = null, b.inTransition = !1, b.initialize = function(a) {
            this.stage = a, this.scene = null, this.nextScene = null, this.sceneStack = [], this.inTransition = null
        }, b.push = function(a, b) {
            if (this.scene) {
                this.scene.dispatchEvent("scenepause"), this.sceneStack.push(this.scene);
                var c = this.stage.getChildIndex(this.scene);
                this.stage.addChildAt(a, c + 1)
            } else this.stage.addChild(a);
            this.nextScene = a;
            var d = this,
                e = function() {
                    d.scene = d.nextScene, d.nextScene = null, d.inTransition = !1, d.scene.dispatchEvent("sceneenter")
                };
            b ? (this.inTransition = !0, b.run(this, this.scene || {}, this.nextScene, e)) : e()
        }, b.pop = function(a) {
            if (0 != this.sceneStack.length) {
                var b = this.sceneStack.pop();
                this.nextScene = b, this.scene && this.scene.dispatchEvent("scenepause");
                var c = this,
                    d = function() {
                        c.inTransition = !1, c.scene && (c.scene.dispatchEvent("sceneexit"), c.stage.removeChild(c.scene)), c.scene = c.nextScene, c.scene.dispatchEvent("sceneresume"), c.nextScene = null
                    };
                a ? (this.inTransition = !0, a.run(this, this.scene || {}, this.nextScene, d)) : d()
            }
        }, b.replace = function(a, b) {
            if (this.scene) {
                this.scene.dispatchEvent("scenepause");
                var c = this.stage.getChildIndex(this.scene);
                this.stage.addChildAt(a, c + 1)
            } else this.stage.addChild(a);
            this.nextScene = a;
            var d = this,
                e = function() {
                    d.inTransition = !1, d.scene && (d.scene.dispatchEvent("sceneexit"), d.stage.removeChild(d.scene)), d.scene = d.nextScene, d.scene.dispatchEvent("sceneenter"), d.nextScene = null
                };
            b ? (this.inTransition = !0, b.run(this, this.scene || {}, this.nextScene, e)) : e()
        }, b.swapScenes = function() {
            this.stage.swapChildrenAt(this.stage.getChildIndex(this.scene), this.stage.getChildIndex(this.nextScene))
        }, b.clearStack = function() {
            for (var a = 0; a < this.sceneStack.length; a++) this.sceneStack[a].dispatchEvent("sceneexit"), this.stage.removeChild(this.sceneStack[a]);
            this.sceneStack = []
        }, creatine.Director = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict"; {
            var a = function() {
                this.initialize()
            };
            a.prototype = new createjs.Container
        }
        creatine.Scene = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a) {
                this.initialize(a)
            },
            b = a.prototype;
        b._canvas = null, b.desktop = !1, b.iOS = !1, b.android = !1, b.chromeOS = !1, b.linux = !1, b.macOS = !1, b.windows = !1, b.windowsPhone = !1, b.canvas = !1, b.file = !1, b.fileSystem = !1, b.localStorage = !1, b.webGL = !1, b.worker = !1, b.touch = !1, b.mspointer = !1, b.css3D = !1, b.pointerLock = !1, b.typedArray = !1, b.vibration = !1, b.getUserMedia = !1, b.quirksMode = !1, b.ejecta = !1, b.cocoonJS = !1, b.webApp = !1, b.arora = !1, b.chrome = !1, b.epiphany = !1, b.firefox = !1, b.ie = !1, b.ieVersion = 0, b.trident = !1, b.tridentVersion = 0, b.mobileSafari = !1, b.midori = !1, b.opera = !1, b.safari = !1, b.silk = !1, b.audioData = !1, b.webAudio = !1, b.ogg = !1, b.opus = !1, b.mp3 = !1, b.wav = !1, b.m4a = !1, b.webm = !1, b.iPhone = !1, b.iPhone4 = !1, b.iPad = !1, b.pixelRatio = 0, b.littleEndian = !1, b.fullscreen = !1, b.initialize = function(a) {
            this._canvas = a, this._checkAudio(), this._checkBrowser(), this._checkCSS3D(), this._checkDevice(), this._checkFeatures(), this._checkOS(), this._checkFullscreen()
        }, b._checkOS = function() {
            var a = navigator.userAgent;
            /Android/.test(a) ? this.android = !0 : /CrOS/.test(a) ? this.chromeOS = !0 : /iP[ao]d|iPhone/i.test(a) ? this.iOS = !0 : /Linux/.test(a) ? this.linux = !0 : /Mac OS/.test(a) ? this.macOS = !0 : /Windows/.test(a) && (this.windows = !0, /Windows Phone/i.test(a) && (this.windowsPhone = !0)), (this.windows || this.macOS || this.linux && this.silk === !1) && (this.desktop = !0), (this.windowsPhone || /Windows NT/i.test(a) && /Touch/i.test(a)) && (this.desktop = !1)
        }, b._checkFeatures = function() {
            try {
                this.localStorage = !!localStorage.getItem
            } catch (a) {
                this.localStorage = !1
            }
            this.file = !!(window.File && window.FileReader && window.FileList && window.Blob), this.fileSystem = !!window.requestFileSystem, this.webGL = function() {
                try {
                    var a = document.createElement("canvas");
                    return !!window.WebGLRenderingContext && (a.getContext("webgl") || a.getContext("experimental-webgl"))
                } catch (b) {
                    return !1
                }
            }(), this.webGL = null === this.webGL || this.webGL === !1 ? !1 : !0, this.worker = !!window.Worker, ("ontouchstart" in document.documentElement || window.navigator.maxTouchPoints && window.navigator.maxTouchPoints > 1) && (this.touch = !0), (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) && (this.mspointer = !0), this.pointerLock = "pointerLockElement" in document || "mozPointerLockElement" in document || "webkitPointerLockElement" in document, this.quirksMode = "CSS1Compat" === document.compatMode ? !1 : !0, this.getUserMedia = !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia)
        }, b._checkBrowser = function() {
            var a = navigator.userAgent;
            /Arora/.test(a) ? this.arora = !0 : /Chrome/.test(a) ? this.chrome = !0 : /Epiphany/.test(a) ? this.epiphany = !0 : /Firefox/.test(a) ? this.firefox = !0 : /Mobile Safari/.test(a) ? this.mobileSafari = !0 : /MSIE (\d+\.\d+);/.test(a) ? (this.ie = !0, this.ieVersion = parseInt(RegExp.$1, 10)) : /Midori/.test(a) ? this.midori = !0 : /Opera/.test(a) ? this.opera = !0 : /Safari/.test(a) ? this.safari = !0 : /Silk/.test(a) ? this.silk = !0 : /Trident\/(\d+\.\d+)(.*)rv:(\d+\.\d+)/.test(a) && (this.ie = !0, this.trident = !0, this.tridentVersion = parseInt(RegExp.$1, 10), this.ieVersion = parseInt(RegExp.$3, 10)), navigator.standalone && (this.webApp = !0), navigator.isCocoonJS && (this.cocoonJS = !0), "undefined" != typeof window.ejecta && (this.ejecta = !0)
        }, b._checkAudio = function() {
            this.audioData = !!window.Audio, this.webAudio = !(!window.webkitAudioContext && !window.AudioContext);
            var a = document.createElement("audio"),
                b = !1;
            try {
                (b = !!a.canPlayType) && (a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, "") && (this.ogg = !0), a.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, "") && (this.opus = !0), a.canPlayType("audio/mpeg;").replace(/^no$/, "") && (this.mp3 = !0), a.canPlayType('audio/wav; codecs="1"').replace(/^no$/, "") && (this.wav = !0), (a.canPlayType("audio/x-m4a;") || a.canPlayType("audio/aac;").replace(/^no$/, "")) && (this.m4a = !0), a.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "") && (this.webm = !0))
            } catch (c) {}
        }, b._checkDevice = function() {
            this.pixelRatio = window.devicePixelRatio || 1, this.iPhone = -1 != navigator.userAgent.toLowerCase().indexOf("iphone"), this.iPhone4 = 2 == this.pixelRatio && this.iPhone, this.iPad = -1 != navigator.userAgent.toLowerCase().indexOf("ipad"), "undefined" != typeof Int8Array ? (this.littleEndian = new Int8Array(new Int16Array([1]).buffer)[0] > 0, this.typedArray = !0) : (this.littleEndian = !1, this.typedArray = !1), navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate, navigator.vibrate && (this.vibration = !0)
        }, b._checkCSS3D = function() {
            var a, b = document.createElement("p"),
                c = {
                    webkitTransform: "-webkit-transform",
                    OTransform: "-o-transform",
                    msTransform: "-ms-transform",
                    MozTransform: "-moz-transform",
                    transform: "transform"
                };
            document.body.insertBefore(b, null);
            for (var d in c) void 0 !== b.style[d] && (b.style[d] = "translate3d(1px,1px,1px)", a = window.getComputedStyle(b).getPropertyValue(c[d]));
            document.body.removeChild(b), this.css3D = void 0 !== a && a.length > 0 && "none" !== a
        }, b._checkFullscreen = function() {
            for (var a = ["requestFullscreen", "webkitRequestFullscreen", "msRequestFullscreen", "mozRequestFullScreen"], b = 0; b < a.length; b++)
                if (this._canvas[a[b]]) {
                    this.fullscreen = !0;
                    break
                }
            window.Element && Element.ALLOW_KEYBOARD_INPUT && (this.fullscreenKeyboard = !0)
        }, b.canPlayAudio = function(a) {
            return "mp3" == a && this.mp3 ? !0 : "ogg" === a && (this.ogg || this.opus) ? !0 : "m4a" === a && this.m4a ? !0 : "wav" === a && this.wav ? !0 : "webm" === a && this.webm ? !0 : !1
        }, creatine.Device = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a) {
                this.initialize(a)
            },
            b = a.prototype = new createjs.EventDispatcher;
        b.canvas = null, b.width = null, b.height = null, b.sourceWidth = null, b.sourceHeight = null, b.minWidth = null, b.minHeight = null, b.maxWidth = null, b.maxHeight = null, b.scaleMode = null, b.orientation = null, b.scaleUsingCSS = !1, b.fullscreenScaleMode = null, b._fullscreenRequest = null, b._width = null, b._height = null, b.EventDispatcher_initialize = b.initialize, b.initialize = function(a) {
            this.EventDispatcher_initialize(), this.canvas = a, this.width = a.width, this.height = a.height, this.sourceWidth = a.width, this.sourceHeight = a.height, this.scaleMode = creatine.NOSCALE, this.orientation = 0, this.scaleUsingCSS = !1, this.fullscreenScaleMode = creatine.FIT, window.orientation ? this.orientation = window.orientation : window.outerWidth > window.outerHeight && (this.orientation = 90);
            for (var b = ["requestFullscreen", "webkitRequestFullscreen", "msRequestFullscreen", "mozRequestFullScreen"], c = 0; c < b.length; c++)
                if (this.canvas[b[c]]) {
                    this._fullscreenRequest = b[c];
                    break
                }
            var d = this;
            window.addEventListener("resize", function(a) {
                return d._onResize(a)
            }, !1), window.addEventListener("orientationchange", function(a) {
                return d._onOrientation(a)
            }, !1), document.addEventListener("webkitfullscreenchange", function(a) {
                return d._onFullscreen(a)
            }, !1), document.addEventListener("mozfullscreenchange", function(a) {
                return d._onFullscreen(a)
            }, !1), document.addEventListener("fullscreenchange", function(a) {
                return d._onFullscreen(a)
            }, !1)
        }, b.refresh = function() {
            var a = this.scaleMode;
            this.isFullscreen() && (a = this.fullscreenScaleMode), this.scaleMode === creatine.STRETCH ? this.resizeStretch() : this.scaleMode === creatine.FIT && this.resizeFit()
        }, b.setSmoothingEnabled = function(a) {
            var b = this.canvas.getContext("2d");
            b.imageSmoothingEnabled = a, b.mozImageSmoothingEnabled = a, b.oImageSmoothingEnabled = a, b.webkitImageSmoothingEnabled = a, b.msImageSmoothingEnabled = a
        }, b.setImageRenderingCrisp = function() {
            var a = this.canvas;
            a.style["image-rendering"] = "optimizeSpeed", a.style["image-rendering"] = "crisp-edges", a.style["image-rendering"] = "-moz-crisp-edges", a.style["image-rendering"] = "-webkit-optimize-contrast", a.style["image-rendering"] = "optimize-contrast", a.style.msInterpolationMode = "nearest-neighbor"
        }, b.setImageRenderingBicubic = function() {
            var a = this.canvas;
            a.style["image-rendering"] = "auto", a.style.msInterpolationMode = "bicubic"
        }, b.setUserSelect = function(a) {
            var b = this.canvas;
            a = a || "none", b.style["-webkit-touch-callout"] = a, b.style["-webkit-user-select"] = a, b.style["-khtml-user-select"] = a, b.style["-moz-user-select"] = a, b.style["-ms-user-select"] = a, b.style["user-select"] = a, b.style["-webkit-tap-highlight-color"] = "rgba(0, 0, 0, 0)"
        }, b.setTouchAction = function(a) {
            var b = this.canvas;
            a = a || "none", b.style.msTouchAction = a, b.style["ms-touch-action"] = a, b.style["touch-action"] = a
        }, b.setBackgroundColor = function(a) {
            a = a || "rgb(0,0,0)", canvas.style.backgroundColor = a
        }, b.setBackgroundImage = function(a) {
            a = a || "none", canvas.style.backgroundImage = a
        }, b._setSize = function(a, b) {
            this.width = a, this.height = b, this.scaleUsingCSS ? (this.canvas.style.width = a + "px", this.canvas.style.height = b + "px") : (this.canvas.width = a, this.canvas.height = b)
        }, b._clipWidth = function(a) {
            return this.minWidth && this.minWidth < a && (a = this.minWidth), this.maxWidth && this.maxWidth > a && (a = this.maxWidth), a
        }, b._clipHeight = function(a) {
            return this.minHeight && this.minHeight < a && (a = this.minHeight), this.maxHeight && this.maxHeight > a && (a = this.maxHeight), a
        }, b.resizeCustom = function(a, b) {
            this.sourceHeight = b, this.sourceWidth = a, this._setSize(a, b)
        }, b.resizeStretch = function() {
            var a = this._clipWidth(window.innerWidth),
                b = this._clipHeight(window.innerHeight);
            this._setSize(a, b)
        }, b.resizeFit = function() {
            var a = Math.min(this._clipHeight(window.innerHeight) / this.sourceHeight, this._clipWidth(window.innerWidth) / this.sourceWidth),
                b = Math.round(this.sourceWidth * a),
                c = Math.round(this.sourceHeight * a);
            this._setSize(b, c)
        }, b.resizeOriginal = function() {
            width = this.sourceWidth, height = this.sourceHeight, this._setSize(width, height)
        }, b.isPortrait = function() {
            return 0 === this.orientation || 180 == this.orientation
        }, b.isLandscape = function() {
            return 90 === this.orientation || -90 === this.orientation
        }, b.isFullscreen = function() {
            return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement
        }, b.startFullscreen = function() {
            this._fullscreenRequest && !this.isFullscreen() && (this._width = this.width, this._height = this.height, window.Element && Element.ALLOW_KEYBOARD_INPUT ? this.canvas[this._fullscreenRequest](Element.ALLOW_KEYBOARD_INPUT) : this.canvas[this._fullscreenRequest]())
        }, b.stopFullscreen = function() {
            this.isFullscreen() && (document.cancelFullScreen ? document.cancelFullScreen() : document.exitFullscreen ? document.exitFullscreen() : document.webkitCancelFullScreen ? document.webkitCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msCancelFullScreen ? document.msCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.mozExitFullscreen && document.mozExitFullscreen())
        }, b._onResize = function() {
            this.scaleMode !== creatine.NOSCALE && this.refresh(), this.dispatchEvent("resize")
        }, b._onOrientation = function() {
            this.orientation = window.orientation, this.dispatchEvent("orientation"), this.dispatchEvent(this.isPortrait() ? "enterportrait" : "enterlandscape")
        }, b._onFullscreen = function() {
            this.isFullscreen() ? (this.refresh(), this.dispatchEvent("enterfullscreen")) : (this.width = this._width, this.height = this._height, this.canvas.width = this._width, this.canvas.height = this._height, this.refresh(), this.dispatchEvent("exitfullscreen"))
        }, creatine.Display = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype;
        b.orientation = null, b.children = null, b.area = null, b.initialize = function(a, b) {
            this.orientation = a, this.children = [], this.area = b
        }, b.add = function(a, b, c, d) {
            d = d || creatine.TOP_LEFT, b = b || 0, c = c || 0, this.children.push([a, b, d, c])
        }, b.layout = function(a) {
            a && (this.area = a);
            for (var b = 0, c = 0, d = 0, e = 0, f = 0; f < this.children.length; f++) {
                var g = this.children[f][0],
                    h = this.children[f][1],
                    i = this.children[f][2],
                    j = this.children[f][3];
                if (b += 2 * j, h > 0) c += h;
                else {
                    var k = g.getBounds();
                    d += k.width, e += k.height
                }
            }
            for (var l, m, n, o, p = this.area.width - b - d, q = this.area.height - b - e, r = this.area.x, s = this.area.y, t = 0, f = 0; f < this.children.length; f++) {
                var g = this.children[f][0],
                    h = this.children[f][1],
                    i = this.children[f][2],
                    j = this.children[f][3];
                if (l = r + j, m = s + j, this.orientation == creatine.VERTICAL) {
                    if (0 == h) {
                        var k = g.getBounds();
                        n = k.width, o = k.height
                    } else t = h / c, n = this.area.width - 2 * j, o = t * q;
                    s += o + 2 * j
                } else if (this.orientation == creatine.HORIZONTAL) {
                    if (0 == h) {
                        var k = g.getBounds();
                        n = k.width, o = k.height
                    } else t = h / c, n = t * p, o = this.area.height - 2 * j;
                    r += n + 2 * j
                }
                this._resize_child(g, {
                    x: l,
                    y: m,
                    width: n,
                    height: o
                }, i)
            }
        }, b._resize_child = function(a, b, c) {
            if (a.layout && a.layout(b), a.getBounds) var d = a.getBounds();
            if (d) var e = d.width,
                f = d.height;
            else var e = 0,
                f = 0;
            switch (c) {
                case creatine.TOP:
                case creatine.TOP_LEFT:
                case creatine.TOP_RIGHT:
                    a.y = b.y;
                    break;
                case creatine.LEFT:
                case creatine.CENTER:
                case creatine.RIGHT:
                    a.y = b.y + b.height / 2 - f / 2;
                    break;
                case creatine.BOTTOM:
                case creatine.BOTTOM_LEFT:
                case creatine.BOTTOM_RIGHT:
                    a.y = b.y + b.height - f
            }
            switch (c) {
                case creatine.LEFT:
                case creatine.TOP_LEFT:
                case creatine.BOTTOM_LEFT:
                    a.x = b.x;
                    break;
                case creatine.TOP:
                case creatine.CENTER:
                case creatine.BOTTOM:
                    a.x = b.x + b.width / 2 - e / 2;
                    break;
                case creatine.RIGHT:
                case creatine.TOP_RIGHT:
                case creatine.BOTTOM_RIGHT:
                    a.x = b.x + b.width - e
            }
        }, creatine.BoxSizer = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a, b, c) {
                this.initialize(a, b, c)
            },
            b = a.prototype;
        b.rows = null, b.cols = null, b.children = null, b.area = null, b.initialize = function(a, b, c) {
            this.rows = a, this.cols = b, this.children = [], this.area = c
        }, b.add = function(a, b, c) {
            c = c || creatine.TOP_LEFT, b = b || 0, this.children.push([a, c, b])
        }, b.layout = function(a) {
            a && (this.area = a);
            for (var b = this.area.width / this.cols, c = this.area.height / this.rows, d = 0; d < this.children.length; d++) {
                var e = this.children[d][0],
                    f = this.children[d][1],
                    g = this.children[d][2],
                    h = this.area.x + b * Math.floor(d % this.cols) + g,
                    i = this.area.y + c * Math.floor(d / this.cols) + g,
                    j = b - 2 * g,
                    k = c - 2 * g;
                this._resize_child(e, {
                    x: h,
                    y: i,
                    width: j,
                    height: k
                }, f)
            }
        }, b._resize_child = function(a, b, c) {
            if (a.layout && a.layout(b), a.getBounds) var d = a.getBounds();
            if (d) var e = d.width,
                f = d.height;
            else var e = 0,
                f = 0;
            switch (c) {
                case creatine.TOP:
                case creatine.TOP_LEFT:
                case creatine.TOP_RIGHT:
                    a.y = b.y;
                    break;
                case creatine.LEFT:
                case creatine.CENTER:
                case creatine.RIGHT:
                    a.y = b.y + b.height / 2 - f / 2;
                    break;
                case creatine.BOTTOM:
                case creatine.BOTTOM_LEFT:
                case creatine.BOTTOM_RIGHT:
                    a.y = b.y + b.height - f
            }
            switch (c) {
                case creatine.LEFT:
                case creatine.TOP_LEFT:
                case creatine.BOTTOM_LEFT:
                    a.x = b.x;
                    break;
                case creatine.TOP:
                case creatine.CENTER:
                case creatine.BOTTOM:
                    a.x = b.x + b.width / 2 - e / 2;
                    break;
                case creatine.RIGHT:
                case creatine.TOP_RIGHT:
                case creatine.BOTTOM_RIGHT:
                    a.x = b.x + b.width - e
            }
        }, creatine.GridSizer = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a, b, c, d, e, f, g) {
                a && this.initialize(a, b, c, d, e, f, g)
            },
            b = a.prototype = new createjs.Shape;
        b.type = null, b.direction = null, b.image = null, b.gradientColors = null, b.fillColor = null, b.backgroundColor = null, b.value = null, b.min = null, b.max = null, b.width = null, b.height = null, b.Shape_initialize = b.initialize, b.initialize = function(a, b, c, d, e, f, g) {
            this.Shape_initialize(), a instanceof Array ? (this.type = "gradient", this.gradientColors = a) : "string" == typeof a ? (this.type = "color", this.fillColor = a) : (this.type = "image", this.image = a, this.image.image && (this.image = this.image.image)), null == b && (b = null), null == c && (c = creatine.LEFT_TO_RIGHT), null == d && (d = 100), null == e && (e = 10), null == f && (f = 0), null == g && (g = 100), this.backgroundColor = b, this.direction = c, this.width = d, this.height = e, this.min = f, this.max = g, this.value = 0
        }, b.isVisible = function() {
            return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY)
        }, b.layout = function(a) {
            this.width = a.width, this.height = a.height
        }, b.draw = function(a, b) {
            if (this.DisplayObject_draw(a, b)) return !0;
            var c = 0,
                d = 0,
                e = this.width,
                f = this.height,
                g = creatine.clip(e * (this.value - this.min) / (this.max - this.min), 0, e),
                h = f,
                i = [e, 0];
            if (this.direction === creatine.TOP_TO_BOTTOM) {
                var i = [0, e],
                    j = e;
                e = f, f = j, j = g, g = h, h = j
            } else if (this.direction === creatine.BOTTOM_TO_TOP) {
                var i = [0, -e],
                    j = e;
                e = f, f = -j, j = g, g = h, h = -j
            } else if (this.direction === creatine.RIGHT_TO_LEFT) {
                var i = [-e, 0];
                e = -e, g = -g
            }
            if (this.graphics.clear(), this.backgroundColor && (this.graphics.beginFill(this.backgroundColor), this.graphics.drawRect(c, d, e, f)), "color" === this.type) this.graphics.beginFill(this.fillColor), this.graphics.drawRect(c, d, g, h);
            else if ("gradient" === this.type) {
                for (var k = [], l = 0; l < this.gradientColors.length; l++) k.push(l / (this.gradientColors.length - 1));
                this.graphics.beginLinearGradientFill(this.gradientColors, k, 0, 0, i[0], i[1]), this.graphics.drawRect(c, d, g, h)
            } else "image" === this.type && (this.graphics.beginBitmapFill(this.image), this.graphics.drawRect(c, d, g, h));
            return this.graphics.draw(a), !0
        }, creatine.ProgressBar = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a, b, c) {
                this.initialize(a, b, c)
            },
            b = a.prototype = new createjs.Container;
        b.direction = null, b.image = null, b.spacing = null, b.value = null, b.Container_initialize = b.initialize, b.initialize = function(a, b, c) {
            this.Container_initialize(), this.image = a.image ? a.image : a, this.spacing = b || 0, this.direction = c || creatine.LEFT_TO_RIGHT, this.value = 0
        }, b.isVisible = function() {
            var a = this.value > 0 || this.cacheCanvas;
            return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && a)
        }, b.Container_draw = b.draw, b.draw = function(a, b) {
            if (this.DisplayObject_draw(a, b)) return !0;
            var c = 0,
                d = 0,
                e = 0,
                f = 0,
                g = this.image.width,
                h = this.image.height;
            this.direction === creatine.LEFT_TO_RIGHT ? c = 1 : this.direction === creatine.RIGHT_TO_LEFT ? (c = -1, e = -g) : this.direction === creatine.TOP_TO_BOTTOM ? d = 1 : this.direction === creatine.BOTTOM_TO_TOP && (d = -1, f = -h), this.removeAllChildren();
            for (var i = 0; i < this.value; i++) {
                var j = new createjs.Bitmap(this.image);
                j.x = e, j.y = f, this.addChild(j), e += this.spacing * c + g * c, f += this.spacing * d + h * d
            }
            return this.Container_draw(a, b)
        }, creatine.DiscreteBar = a
    }(), this.creatine = this.creatine || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype = new createjs.Bitmap;
        b.scaleMode = null, b.Bitmap_initialize = b.initialize, b.initialize = function(a, b) {
            this.Bitmap_initialize(a), this.scaleMode = b || creatine.NOSCALE
        }, b.layout = function(a) {
            var b, c, d = this.image.width,
                e = this.image.height;
            this.scaleMode === creatine.FIT ? b = c = Math.min(a.height / e, a.width / d) : this.scaleMode === creatine.FILL ? b = c = Math.max(a.height / e, a.width / d) : this.scaleMode === creatine.STRETCH ? (b = a.width / d, c = a.height / e) : b = c = 1, this.scaleX = b, this.scaleY = c
        }, b.getBounds = function() {
            var a = this.image.width * this.scaleX,
                b = this.image.height * this.scaleY;
            return this._rectangle.initialize(0, 0, a, b)
        }, creatine.FlexBitmap = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b, c) {
                this.initialize(a, b, c)
            },
            b = a.prototype;
        b.direction = null, b.ease = null, b.time = null, b.initialize = function(a, b, c) {
            this.direction = a || creatine.LEFT, this.ease = b || createjs.Ease.linear, this.time = c || 400
        }, b.run = function(a, b, c, d) {
            a.swapScenes();
            var e = a.stage.canvas.width,
                f = a.stage.canvas.height,
                g = {};
            switch (this.direction) {
                case creatine.LEFT:
                    g.x = -e;
                    break;
                case creatine.RIGHT:
                    g.x = e;
                    break;
                case creatine.TOP:
                    g.y = -f;
                    break;
                case creatine.BOTTOM:
                    g.y = f;
                    break;
                case creatine.TOP_LEFT:
                    g.x = -e, g.y = -f;
                    break;
                case creatine.TOP_RIGHT:
                    g.x = e, g.y = -f;
                    break;
                case creatine.BOTTOM_LEFT:
                    g.x = -e, g.y = f;
                    break;
                case creatine.BOTTOM_RIGHT:
                    g.x = e, g.y = f
            }
            var h = createjs.Tween.get(b);
            h.to(g, this.time, this.ease).addEventListener("change", tweenOnChange), d && h.call(d)
        }, creatine.transitions.MoveOut = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b, c) {
                this.initialize(a, b, c)
            },
            b = a.prototype;
        b.direction = null, b.ease = null, b.time = null, b.initialize = function(a, b, c) {
            this.direction = a || creatine.LEFT, this.ease = b || createjs.Ease.linear, this.time = c || 400
        }, b.run = function(a, b, c, d) {
            var e = a.stage.canvas.width,
                f = a.stage.canvas.height,
                g = {};
            switch (this.direction) {
                case creatine.LEFT:
                    c.x = -e, g.x = 0;
                    break;
                case creatine.RIGHT:
                    c.x = e, g.x = 0;
                    break;
                case creatine.TOP:
                    c.y = -f, g.y = 0;
                    break;
                case creatine.BOTTOM:
                    c.y = f, g.y = 0;
                    break;
                case creatine.TOP_LEFT:
                    c.x = -e, c.y = -f, g.x = 0, g.y = 0;
                    break;
                case creatine.TOP_RIGHT:
                    c.x = e, c.y = -f, g.x = 0, g.y = 0;
                    break;
                case creatine.BOTTOM_LEFT:
                    c.x = -e, c.y = f, g.x = 0, g.y = 0;
                    break;
                case creatine.BOTTOM_RIGHT:
                    c.x = e, c.y = f, g.x = 0, g.y = 0
            }
            var h = createjs.Tween.get(c);
            h.to(g, this.time, this.ease).addEventListener("change", tweenOnChange), d && h.call(d)
        }, creatine.transitions.MoveIn = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b, c) {
                this.initialize(a, b, c)
            },
            b = a.prototype;
        b.direction = null, b.ease = null, b.time = null, b.initialize = function(a, b, c) {
            this.direction = a || creatine.LEFT, this.ease = b || createjs.Ease.linear, this.time = c || 400
        }, b.run = function(a, b, c, d) {
            a.swapScenes();
            var e = a.stage.canvas.width,
                f = a.stage.canvas.height,
                g = {},
                h = {};
            switch (this.direction) {
                case creatine.LEFT:
                    c.x = e, h.x = 0, g.x = -e;
                    break;
                case creatine.RIGHT:
                    c.x = -e, h.x = 0, g.x = e;
                    break;
                case creatine.TOP:
                    c.y = f, h.y = 0, g.y = -f;
                    break;
                case creatine.BOTTOM:
                    c.y = -f, h.y = 0, g.y = f
            }
            var i = createjs.Tween.get(c);
            i.to(h, this.time, this.ease).addEventListener("change", tweenOnChange), d && i.call(d), i = createjs.Tween.get(b), i.to(g, this.time, this.ease).addEventListener("change", tweenOnChange)
        }, creatine.transitions.Scroll = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype;
        b.ease = null, b.time = null, b.initialize = function(a, b) {
            this.ease = a || createjs.Ease.linear, this.time = b || 400
        }, b.run = function(a, b, c, d) {
            c.alpha = 0;
            var e = createjs.Tween.get(c);
            e.to({
                alpha: 1
            }, this.time, this.ease).addEventListener("change", tweenOnChange), d && e.call(d)
        }, creatine.transitions.FadeIn = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype;
        b.ease = null, b.time = null, b.initialize = function(a, b) {
            this.ease = a || createjs.Ease.linear, this.time = b || 400
        }, b.run = function(a, b, c, d) {
            a.swapScenes();
            var e = createjs.Tween.get(b);
            e.to({
                alpha: 0
            }, this.time, this.ease).addEventListener("change", tweenOnChange), d && e.call(d)
        }, creatine.transitions.FadeOut = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype;
        b.ease = null, b.time = null, b.initialize = function(a, b) {
            this.ease = a || createjs.Ease.linear, this.time = b || 1e3
        }, b.run = function(a, b, c, d) {
            var e = this.time / 2;
            a.swapScenes(), c.alpha = 0;
            var f = createjs.Tween.get(c).wait(e).to({
                alpha: 1
            }, e, this.ease).addEventListener("change", tweenOnChange);
            createjs.Tween.get(b).to({
                alpha: 0
            }, e, this.ease).addEventListener("change", tweenOnChange), d && f.call(d)
        }, creatine.transitions.FadeInOut = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype;
        b.ease = null, b.time = null, b.initialize = function(a, b, c) {
            this.ease = b || createjs.Ease.linear, this.time = c || 400
        }, b.run = function(a, b, c, d) {
            var e = a.stage.canvas.width,
                f = a.stage.canvas.height,
                g = {};
            c.scaleX = 0, c.scaleY = 0, c.x = e / 2, c.y = f / 2, g.scaleX = 1, g.scaleY = 1, g.x = 0, g.y = 0;
            var h = createjs.Tween.get(c);
            h.to(g, this.time, this.ease).addEventListener("change", tweenOnChange), d && h.call(d)
        }, creatine.transitions.ScaleIn = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype;
        b.ease = null, b.time = null, b.initialize = function(a, b, c) {
            this.ease = b || createjs.Ease.linear, this.time = c || 400
        }, b.run = function(a, b, c, d) {
            a.swapScenes();
            var e = a.stage.canvas.width,
                f = a.stage.canvas.height,
                g = {};
            c.x = 0, c.y = 0, g.scaleX = 0, g.scaleY = 0, g.x = e / 2, g.y = f / 2;
            var h = createjs.Tween.get(b);
            h.to(g, this.time, this.ease).addEventListener("change", tweenOnChange), d && h.call(d)
        }, creatine.transitions.ScaleOut = a
    }(), this.creatine = this.creatine || {}, this.creatine.transitions = this.creatine.transitions || {},
    function() {
        "use strict";
        var a = function(a, b) {
                this.initialize(a, b)
            },
            b = a.prototype;
        b.ease = null, b.time = null, b.initialize = function(a, b, c) {
            this.ease = b || createjs.Ease.linear, this.time = c || 1e3
        }, b.run = function(a, b, c, d) {
            var e = this.time / 2,
                f = a.stage.canvas.width,
                g = a.stage.canvas.height,
                h = {},
                i = {};
            c.x = f / 2, c.y = g / 2, c.scaleX = 0, c.scaleY = 0, h.x = 0, h.y = 0, h.scaleX = 1, h.scaleY = 1, i.x = f / 2, i.y = g / 2, i.scaleX = 0, i.scaleY = 0, createjs.Tween.get(b).to(i, e, this.ease).addEventListener("change", tweenOnChange);
            var j = createjs.Tween.get(c).wait(e).to(h, e, this.ease).addEventListener("change", tweenOnChange);
            d && j.call(d)
        }, creatine.transitions.ScaleInOut = a
    }();
